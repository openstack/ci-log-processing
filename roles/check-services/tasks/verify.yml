---
- name: Ensure logscraper is available and running
  shell: |
    systemctl is-active -q logscraper-{{ item.tenant }}
  loop: "{{ tenant_builds }}"
  register: _service_status
  failed_when: _service_status.rc != 0

- name: Ensure logsender is available and running
  shell: |
    systemctl is-active -q logsender-{{ item.tenant }}
  loop: "{{ tenant_builds }}"
  register: _service_status
  failed_when: _service_status.rc != 0

- name: Get Opensearch indices
  block:
    - name: Get indices - es_index
      uri:
        url: "https://{{ item.es_host }}:{{ item.es_port }}/_cat/indices"
        user: "{{ item.es_admin_username }}"
        password: "{{ item.es_admin_password }}"
        force_basic_auth: true
        method: GET
        validate_certs: false
        status_code: "200"
        return_content: true
      register: _opensearch_indices
      until: item.es_index in _opensearch_indices.content
      retries: 30
      delay: 10
      loop:  "{{ tenant_builds }}"
      when: "'es_index' in item and item.es_index"

    - name: Check if build_branch exists in index content - es_index
      uri:
        url: "https://{{ item.es_host }}:{{ item.es_port }}/{{ item.es_index }}"
        user: "{{ item.es_admin_username }}"
        password: "{{ item.es_admin_password }}"
        force_basic_auth: true
        method: GET
        validate_certs: false
        status_code: "200"
        return_content: true
      register: _opensearch_index_content
      until: "'build_branch' in _opensearch_index_content.content"
      retries: 30
      delay: 10
      loop:  "{{ tenant_builds }}"
      when: "'es_index' in item and item.es_index"

    - name: Get indices - es_index_prefix
      uri:
        url: "https://{{ item.es_host }}:{{ item.es_port }}/_cat/indices"
        user: "{{ item.es_admin_username }}"
        password: "{{ item.es_admin_password }}"
        force_basic_auth: true
        method: GET
        validate_certs: false
        status_code: "200"
        return_content: true
      register: _opensearch_indices
      until: item.es_index_prefix in _opensearch_indices.content
      retries: 30
      delay: 10
      loop:  "{{ tenant_builds }}"
      when: "'es_index_prefix' in item and item.es_index_prefix"

    # The es_index_prefix looks like: logstash-logscraper-
    # Where the full indices in OpenSearch looks like: logstash-logscraper-2024.04.30
    - name: Check if build_branch exists in index content - es_index_prefix
      uri:
        url: "https://{{ item.es_host }}:{{ item.es_port }}/{{ item.es_index_prefix }}{{ now(utc=true,fmt='%Y.%m.%d') }}"
        user: "{{ item.es_admin_username }}"
        password: "{{ item.es_admin_password }}"
        force_basic_auth: true
        method: GET
        validate_certs: false
        status_code: "200"
        return_content: true
      register: _opensearch_index_content
      until: "'build_branch' in _opensearch_index_content.content"
      retries: 30
      delay: 10
      loop:  "{{ tenant_builds }}"
      when: "'es_index_prefix' in item and item.es_index_prefix"

  rescue:
    - name: List all podman containers
      shell: |
        podman ps -a

    - name: Get opensearch logs
      shell: |
        podman logs opensearch

    - name: Get logscraper logs
      shell: |
        podman logs logscraper-{{ item.tenant }}
      loop: "{{ tenant_builds }}"

    - name: Get logsender logs
      shell: |
        podman logs logsender-{{ item.tenant }}
      loop: "{{ tenant_builds }}"

    - name: Get indices to fail the test
      uri:
        url: "https://{{ item.es_host }}:{{ item.es_port }}/_cat/indices"
        user: "{{ item.es_admin_username }}"
        password: "{{ item.es_admin_password }}"
        force_basic_auth: true
        method: GET
        validate_certs: false
        status_code: "200"
        return_content: true
      loop:  "{{ tenant_builds }}"
